<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build;Pack">
	<PropertyGroup>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' == '' And '$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<RootDir Condition="'$(teamcity_build_checkoutDir)' != ''">$(teamcity_build_checkoutDir)</RootDir>
		<Solution>Chorus.sln</Solution>
		<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
		<ApplicationName Condition="'$(OS)'=='Windows_NT'">ChorusLibrary</ApplicationName>
		<ApplicationName Condition="'$(OS)'!='Windows_NT'">Chorus</ApplicationName>
		<ApplicationNameLC>chorus</ApplicationNameLC>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>
		<ExtraExcludeCategories Condition="'$(OS)'!='Windows_NT'">KnownMonoIssue,</ExtraExcludeCategories>
		<ExtraExcludeCategories Condition="'$(teamcity_version)' != ''">SkipOnTeamCity,SkipOnBuildServer,SkipOnTeamCityRandomTestFailure,$(ExtraExcludeCategories)</ExtraExcludeCategories>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
		<OutputDir>$(RootDir)/output/$(Configuration)</OutputDir>
		<TeamCity Condition="'$(teamcity_version)' != ''">true</TeamCity>
		<TeamCity Condition="'$(teamcity_version)' == ''">false</TeamCity>

		<RestartBuild Condition="!Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') Or !Exists('$(RootDir)/packages/NUnit.ConsoleRunner/tools/nunit3-console.exe') Or !Exists('$(RootDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll') And Exists('$(RootDir)/packages/NUnit.ConsoleRunner/tools/nunit3-console.exe') And Exists('$(RootDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll')">false</RestartBuild>
	</PropertyGroup>

	<Import Project="NuGet.targets"/>

	<Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
		<Message Text="RestartBuild=$(RestartBuild)" />
		<Exec Command='$(NuGetCommand) install NUnit.Console -excludeVersion -version 3.11.1 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 2.3.2 -solutionDirectory "$(RootDir)"' />
		<Exec Command='$(NuGetCommand) install BuildDependencyTasks -excludeVersion -version 0.4.3 -solutionDirectory "$(RootDir)"' />
	</Target>

	<UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
		Condition="'$(OS)'=='Windows_NT' And Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')"/>
	<UsingTask TaskName="Archive" AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
		Condition="'$(OS)'!='Windows_NT' And Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')"/>
	<UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll" Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')"/>
	<UsingTask TaskName="NUnit3" AssemblyFile="$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll" Condition="Exists('$(RootDir)/packages/SIL.BuildTasks/tools/SIL.BuildTasks.dll')"/>
	<UsingTask TaskName="Dependencies" AssemblyFile="$(SolutionDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll" Condition="Exists('$(RootDir)/packages/BuildDependencyTasks/BuildDependencyTasks.dll')"/>

	<!-- Windows installer stuff -->
	<Target Name="Installer" DependsOnTargets="CleanInstaller; Build" Condition="'$(OS)'=='Windows_NT'">

		<!-- set the version number in the installer configuration program.  Perhaps there's a way to just send in the variables rather than this brute-force
		changing of the script, but I haven't figured that out. -->

		<FileUpdate File="$(RootDir)\src\Installer\ChorusMergeModule.wxs" Regex='Property_ProductVersion = ".*"'
				ReplacementText ="Property_ProductVersion = &quot;$(GitVersion_AssemblySemFileVer)&quot;" />
		<Message Text="Making Chorus Merge Module Version: $(GitVersion_AssemblySemFileVer)" Importance="high"  />

		<MSBuild Projects="$(RootDir)\src\Installer\ChorusMergeModule.wixproj"/>

	</Target>

	<Target Name="ChorusHubInstaller" DependsOnTargets="CleanInstaller;Build" Condition="'$(OS)'=='Windows_NT'">

		<!-- set the version number in the installer configuration program.  Perhaps there's a way to just send in the variables rather than this brute-force
		changing of the script, but I haven't figured that out. -->

		<FileUpdate File="$(RootDir)\src\Installer\ChorusHub.wxs" Regex='Property_ProductVersion = ".*"'
				ReplacementText="Property_ProductVersion = &quot;$(GitVersion_AssemblySemFileVer)&quot;" />
		<FileUpdate File="$(RootDir)\src\Installer\resources\License.rtf" RegEx='COPYRIGHTYEARPLACEHOLDER'
				ReplacementText="$([System.DateTime]::Now.ToString(yyyy))" />
		<Message Text="Making Chorus Hub installer with version: $(GitVersion_AssemblySemFileVer)" Importance="high"  />

		<MSBuild Projects="$(RootDir)\src\Installer\ChorusHub.wixproj"/>

	</Target>

	<Target Name="SignChorusHub" DependsOnTargets="ChorusHubInstaller">
		<Message Text="Attempting to sign ChorusHubInstaller.msi" Importance="high" />
		<Exec Command='sign "$(RootDir)\output\Release\ChorusHubInstaller.msi" ' />
	</Target>

	<Target Name="MakeWixForDistFiles" DependsOnTargets="Compile" Condition="'$(OS)'=='Windows_NT'">
		<!-- NB: The Exclude argument doesn't seem to be working so you may need to hand edit the GeneratedMercurial.wxs -->
		<MakeWixForDirTree
			DirectoryReferenceId="mercurial"
			ComponentGroupId="Mercurial"
			RootDirectory="$(RootDir)\mercurial"
			OutputFilePath="$(RootDir)\src\Installer\GeneratedMercurial.wxs"
			IgnoreRegExPattern="IGNOREME|\.gitignore"
			Exclude="$(RootDir)\mercurial\mercurial.ini;$(RootDir)\mercurial\default.d\cacerts.rc"
			MatchRegExPattern=".*">
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
		<MakeWixForDirTree
			DirectoryReferenceId="MercurialExtensions"
			ComponentGroupId="MercurialExtensions"
			RootDirectory="$(RootDir)\MercurialExtensions"
			OutputFilePath="$(RootDir)\src\Installer\GeneratedMercurialExtensions.wxs"
			IgnoreRegExPattern="IGNOREME|\.gitignore"
			MatchRegExPattern=".*">
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>
</Project>
